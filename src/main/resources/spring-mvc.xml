<beans 	xmlns="http://www.springframework.org/schema/beans"
          xmlns:context="http://www.springframework.org/schema/context"
          xmlns:mvc="http://www.springframework.org/schema/mvc"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd">

        <!-- 告知springmvc  哪些包中 存在 被注解的类 -->
        <!-- <context:component-scan base-package="com.shine.controller"></context:component-scan>-->

        <!-- 告知SpringMVC  哪些包中 存在 被注解的类
            use-default-filters=true 凡是被 @Controller @Service  @Repository注解的类，都会被扫描
            use-default-filters=false 默认不扫描包内的任何类, 只扫描include-filter中指定的类
            只扫描被@Controller注解的类
        -->
        <context:component-scan base-package="com.layui" use-default-filters="false">
                <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>

        <!-- 注册注解开发驱动 -->
        <mvc:annotation-driven></mvc:annotation-driven>

        <!--
          额外的增加一个handler，且其requestMapping:  "/**" 可以匹配所有请求，但是优先级最低
          所以如果其他所有的handler都匹配不上，请求会转向 "/**" ,恰好，这个handler就是处理静态资源的
          处理方式：将请求转会到tomcat中名为default的Servlet
        -->
<!--        <mvc:default-servlet-handler/>-->

        <!--
                - mapping是访问路径，location是静态资源存放的路径
                - 将/html/** 中 /**匹配到的内容，拼接到 /hhh/后
                  http://..../html/a.html  访问 /hhh/a.html
        -->
        <mvc:resources mapping="/html/**" location="/html/"/>

        <mvc:annotation-driven>
                <!-- 安装FastJson,转换器 -->
                <mvc:message-converters>
                        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                                <!-- 声明转换类型:json -->
                                <property name="supportedMediaTypes">
                                        <list>
                                                <value>application/json</value>
                                        </list>
                                </property>
                        </bean>
                </mvc:message-converters>
        </mvc:annotation-driven>

        <!--  异常解析器  -->
<!--        <bean class="com.shine.resolver.MyExceptionResolver"></bean>-->

        <!--  配置拦截器  -->
        <!--<mvc:interceptors>
                <mvc:interceptor>
                        &lt;!&ndash;<mvc:mapping path="/user/center"/>
                        <mvc:mapping path="/user/info"/>&ndash;&gt;
                        <mvc:mapping path="/user/**"/>
                        <mvc:exclude-mapping path="/user/login"/>
                        <mvc:exclude-mapping path="/user/register"/>
                        <bean class="com.shine.interceptor.LoginStatusInterceptor"></bean>
                </mvc:interceptor>
        </mvc:interceptors>-->

        <!-- 上传解析器
                 id必须是：“multipartResolver”
         -->
        <!-- 最大可上传的文件大小  单位：byte  超出后会抛出MaxUploadSizeExceededException异常，可以异常解析器捕获 -->
       <!-- <bean id="multipartResolver"
              class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

                <property name="maxUploadSize" value="8388608"></property>
        </bean>-->

</beans>